/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package telas;

import apoio.Formatacao;
import apoio.Validacao;
import controladores.ControlaCidade;
import controladores.ControlaEndereco;
import controladores.ControlaPessoa;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import modelos.Cidade;
import modelos.ComboItem;
import modelos.Pessoa;
import modelos.DAO.CombosDAO;
import apoio.ConsomeAPI;
import com.google.gson.Gson;
import java.net.URI;
import java.net.http.HttpResponse;
import java.util.ArrayList;
import modelos.Endereco;

/**
 *
 * @author leonardo.bourscheid
 */
public class CadastroPessoa extends javax.swing.JDialog {

    TelaListagemPessoa telaListagemPessoa;
    ControlaPessoa controlaPessoa = ControlaPessoa.getInstance();
    ControlaCidade controlaCidade = ControlaCidade.getInstance();
    ControlaEndereco controlaEndereco = ControlaEndereco.getInstance();
    Pessoa pessoaEditada = null;

    Gson gson = new Gson();

    /**
     * Creates new form CadastroPessoa
     */
    //Construtor tela de cadastro
    public CadastroPessoa(java.awt.Frame parent, boolean modal, TelaListagemPessoa tl) {
        super(parent, modal);
        initComponents();
        this.telaListagemPessoa = tl;
        //Popula combo box resgatando cidades do banco de dados
        new CombosDAO().popularCombo("cidade", cmbCidade);

        //Define mascaras de campos
        Formatacao.formatarCpf(txtCpf);
        Formatacao.formatarData(txtDataNascimento);
        Formatacao.formatarCep(txtCep);
    }

    //Construtor tela de edicao
    public CadastroPessoa(java.awt.Frame parent, boolean modal, TelaListagemPessoa tl, Integer codPessoa) {
        super(parent, modal);
        initComponents();
        this.telaListagemPessoa = tl;
        this.pessoaEditada = controlaPessoa.recuperarPessoa(codPessoa);
        new CombosDAO().popularCombo("cidade", cmbCidade);
        //Define mascaras de campos
        Formatacao.formatarCpf(txtCpf);
        Formatacao.formatarData(txtDataNascimento);
        Formatacao.formatarCep(txtCep);

        //Preenche campos da pessoa
        txtNomePessoa.setText(pessoaEditada.getNomePessoa());

        if (!pessoaEditada.getCpf().equals("null")) {
            txtCpf.setText(pessoaEditada.getCpf());
        }

        if (!pessoaEditada.getPasssaporte().equals("null")) {
            txtPassaporte.setText(pessoaEditada.getPasssaporte());
        }

        txtDataNascimento.setText(pessoaEditada.getDataNascimento().format(Formatacao.FORMATO_1));
        txtNumeroCelular.setText(pessoaEditada.getNumCelular());
        txtSexo.setText(pessoaEditada.getSexo().toString());
        txtEstadoCivil.setText(pessoaEditada.getEstadoCivil());
        txtLogradouro.setText(pessoaEditada.getEndereco().getLogradouro());
        txtNumero.setText(pessoaEditada.getEndereco().getNumero());
        txtBairro.setText(pessoaEditada.getEndereco().getBairro());
        txtCep.setText(pessoaEditada.getEndereco().getCep());

        if (!pessoaEditada.getEndereco().getComplemento().equals("null")) {
        txtComplemento.setText(pessoaEditada.getEndereco().getComplemento());
        }

        cmbCidade.setSelectedIndex(pessoaEditada.getEndereco().getCidade().getCodCidade());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel6 = new javax.swing.JLabel();
        cmbCidade = new javax.swing.JComboBox<>();
        lblNomePessoa = new javax.swing.JLabel();
        btnSalvar = new javax.swing.JButton();
        txtNomePessoa = new javax.swing.JTextField();
        lblCpf = new javax.swing.JLabel();
        lblPassaporte = new javax.swing.JLabel();
        txtPassaporte = new javax.swing.JTextField();
        lblDataNascimento = new javax.swing.JLabel();
        lblSexo = new javax.swing.JLabel();
        txtSexo = new javax.swing.JTextField();
        lblNumeroCelular = new javax.swing.JLabel();
        txtNumeroCelular = new javax.swing.JTextField();
        lblEstadoCivil = new javax.swing.JLabel();
        txtEstadoCivil = new javax.swing.JTextField();
        lblLogradouro = new javax.swing.JLabel();
        txtLogradouro = new javax.swing.JTextField();
        lblNumero = new javax.swing.JLabel();
        txtNumero = new javax.swing.JTextField();
        lblBairro = new javax.swing.JLabel();
        txtBairro = new javax.swing.JTextField();
        txtCpf = new javax.swing.JFormattedTextField();
        txtDataNascimento = new javax.swing.JFormattedTextField();
        lblComplemento = new javax.swing.JLabel();
        txtComplemento = new javax.swing.JTextField();
        lblCep = new javax.swing.JLabel();
        txtCep = new javax.swing.JFormattedTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel6.setText("Cidade:*");

        cmbCidade.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbCidade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbCidadeActionPerformed(evt);
            }
        });

        lblNomePessoa.setText("Nome:*");

        btnSalvar.setText("SALVAR");
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });

        txtNomePessoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNomePessoaActionPerformed(evt);
            }
        });

        lblCpf.setText("CPF:");

        lblPassaporte.setText("Passaporte:");

        txtPassaporte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPassaporteActionPerformed(evt);
            }
        });

        lblDataNascimento.setText("Data de nascimento:*");

        lblSexo.setText("Sexo:*");

        txtSexo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSexoActionPerformed(evt);
            }
        });

        lblNumeroCelular.setText("Numero celular:*");

        lblEstadoCivil.setText("Estado civil:*");

        txtEstadoCivil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEstadoCivilActionPerformed(evt);
            }
        });

        lblLogradouro.setText("Logradouro:*");

        lblNumero.setText("Numero:*");

        txtNumero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNumeroActionPerformed(evt);
            }
        });

        lblBairro.setText("Bairro:*");

        txtBairro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBairroActionPerformed(evt);
            }
        });

        lblComplemento.setText("Complemento");

        lblCep.setText("CEP:*");

        txtCep.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtCepFocusLost(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txtComplemento)
                            .addComponent(lblComplemento, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtNumero)
                            .addComponent(lblNumero, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtCep, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtLogradouro, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblLogradouro)
                            .addComponent(txtBairro, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblBairro)
                            .addComponent(cmbCidade, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6)))
                    .addComponent(lblCep)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(txtNomePessoa)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(lblCpf)
                                .addComponent(lblDataNascimento)
                                .addComponent(txtCpf)
                                .addComponent(txtDataNascimento, javax.swing.GroupLayout.DEFAULT_SIZE, 255, Short.MAX_VALUE))
                            .addGap(18, 18, 18)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(lblPassaporte)
                                .addComponent(lblNumeroCelular)
                                .addComponent(txtPassaporte, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtNumeroCelular, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addComponent(btnSalvar, javax.swing.GroupLayout.Alignment.TRAILING))
                    .addComponent(lblNomePessoa)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblSexo, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtSexo, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblEstadoCivil)
                            .addComponent(txtEstadoCivil, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(14, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(lblNomePessoa)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtNomePessoa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblCpf)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtCpf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblPassaporte)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtPassaporte, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblNumeroCelular)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtNumeroCelular, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtDataNascimento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblDataNascimento)
                        .addGap(28, 28, 28)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSexo)
                    .addComponent(lblEstadoCivil))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSexo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtEstadoCivil, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCep)
                    .addComponent(lblLogradouro))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCep, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtLogradouro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblNumero)
                            .addComponent(lblBairro))
                        .addGap(28, 28, 28))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtNumero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtBairro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(lblComplemento))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbCidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtComplemento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 42, Short.MAX_VALUE)
                .addComponent(btnSalvar)
                .addGap(21, 21, 21))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
        if (pessoaEditada != null) {
            editaPessoa();
        } else {
            salvarPessoa();
        }
    }//GEN-LAST:event_btnSalvarActionPerformed

    private void txtNomePessoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNomePessoaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNomePessoaActionPerformed

    private void txtPassaporteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPassaporteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPassaporteActionPerformed

    private void txtSexoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSexoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSexoActionPerformed

    private void txtEstadoCivilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEstadoCivilActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEstadoCivilActionPerformed

    private void txtNumeroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNumeroActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNumeroActionPerformed

    private void txtBairroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBairroActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBairroActionPerformed

    private void cmbCidadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbCidadeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbCidadeActionPerformed

    private void txtCepFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCepFocusLost

        String enderecoAPI = "https://viacep.com.br/ws/" + Formatacao.removerFormatacao(txtCep.getText()) + "/json/";

        String response = ConsomeAPI.obterDados(enderecoAPI);

        Cidade cidade = gson.fromJson(response, Cidade.class);

        controlaCidade.salvar(cidade);
        new CombosDAO().popularCombo("cidade", cmbCidade);

        cmbCidade.setSelectedIndex(cidade.getCodCidade());

        Endereco endereco = gson.fromJson(response, Endereco.class);

        txtLogradouro.setText(endereco.getLogradouro());
        txtBairro.setText(endereco.getBairro());

    }//GEN-LAST:event_txtCepFocusLost

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CadastroPessoa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CadastroPessoa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CadastroPessoa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CadastroPessoa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                CadastroPessoa dialog = new CadastroPessoa(new javax.swing.JFrame(), true, null);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    public void limparCampos() {
        txtNomePessoa.setText("");
        txtCpf.setText("");
        txtPassaporte.setText("");
        txtDataNascimento.setText("");
        txtNumeroCelular.setText("");
        txtSexo.setText("");
        txtEstadoCivil.setText("");
        txtCep.setText("");
        txtLogradouro.setText("");
        txtNumero.setText("");
        txtBairro.setText("");
        cmbCidade.setSelectedIndex(0);

    }

    public JTextField getTxtCpf() {
        return txtCpf;
    }

    public JTextField getTxtPassaporte() {
        return txtPassaporte;
    }
    
    private void salvarPessoa() {
        Cidade cidade = recuperaCidade();
        Endereco endereco = new Endereco(Formatacao.removerFormatacao(txtCep.getText()),
                txtLogradouro.getText().toUpperCase(),
                txtNumero.getText().toUpperCase(),
                txtBairro.getText().toUpperCase(),
                cidade);

        controlaEndereco.salvar(endereco);

        endereco = controlaEndereco.recuperarEndereco(endereco);

        if (!txtComplemento.getText().isEmpty()) {
            endereco.setComplemento(txtComplemento.getText().toUpperCase());
        }

        Pessoa pessoa = new Pessoa(txtNomePessoa.getText().toUpperCase(),
                LocalDate.parse(txtDataNascimento.getText(), Formatacao.FORMATO_1),
                txtSexo.getText().trim().toUpperCase().charAt(0),
                txtNumeroCelular.getText(),
                txtEstadoCivil.getText().toUpperCase(),
                endereco);

        boolean validacaoDocumento = Validacao.validaDocumentoInsercao(this, pessoa);

        boolean pessoaFoiSalva = controlaPessoa.salvar(pessoa);

        if (!validacaoDocumento) {
            JOptionPane.showMessageDialog(this, "ERRO: pelo menos um dos campos, CPF ou PASSAPORTE, devem ser preenchidos");
        } else if (pessoaFoiSalva) {
            JOptionPane.showMessageDialog(this, "Salvo com sucesso!");

            limparCampos();

            txtNomePessoa.requestFocus();

            telaListagemPessoa.montaTabela();
        } else {
            JOptionPane.showMessageDialog(this, "Erro ao salvar, tente novamente: ");
        }
    }
    
    private void editaPessoa() {
        Cidade cidade = recuperaCidade();
        
        pessoaEditada.setNomePessoa(txtNomePessoa.getText().toUpperCase());
        pessoaEditada.setDataNascimento(LocalDate.parse(txtDataNascimento.getText(), Formatacao.FORMATO_1));
        pessoaEditada.setSexo(txtSexo.getText().trim().toUpperCase().charAt(0));
        pessoaEditada.setNumCelular(txtNumeroCelular.getText());
        pessoaEditada.setEstadoCivil(txtEstadoCivil.getText().toUpperCase());
        pessoaEditada.getEndereco().setLogradouro(txtLogradouro.getText().toUpperCase());
        pessoaEditada.getEndereco().setNumero(txtNumero.getText().toUpperCase());
        pessoaEditada.getEndereco().setBairro(txtBairro.getText().toUpperCase());
        pessoaEditada.getEndereco().setCep(Formatacao.removerFormatacao(txtCep.getText()));
        pessoaEditada.getEndereco().setComplemento(txtComplemento.getText().toUpperCase().trim());
        pessoaEditada.getEndereco().setCidade(cidade);

        boolean validacaoDocumento = Validacao.validaDocumentoInsercao(this, pessoaEditada);

        boolean deuCerto = controlaPessoa.editar(pessoaEditada);

        if (!validacaoDocumento) {
            JOptionPane.showMessageDialog(null, "ERRO: pelo menos um dos campos, CPF ou PASSAPORTE, devem ser preenchidos");
        } else if (deuCerto) {
            JOptionPane.showMessageDialog(this, "Editado com sucesso!");
            telaListagemPessoa.montaTabela();
            this.dispose();
        } else {
            JOptionPane.showMessageDialog(this, "Erro ao salvar, tente novamente: ");
        }
    }
    
    private Cidade recuperaCidade() {
        ComboItem cidadeCombo = (ComboItem) cmbCidade.getSelectedItem();
        Cidade cidade = controlaCidade.recuperarCidade(cidadeCombo.getCodigo());
        return cidade;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSalvar;
    private javax.swing.JComboBox<String> cmbCidade;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel lblBairro;
    private javax.swing.JLabel lblCep;
    private javax.swing.JLabel lblComplemento;
    private javax.swing.JLabel lblCpf;
    private javax.swing.JLabel lblDataNascimento;
    private javax.swing.JLabel lblEstadoCivil;
    private javax.swing.JLabel lblLogradouro;
    private javax.swing.JLabel lblNomePessoa;
    private javax.swing.JLabel lblNumero;
    private javax.swing.JLabel lblNumeroCelular;
    private javax.swing.JLabel lblPassaporte;
    private javax.swing.JLabel lblSexo;
    private javax.swing.JTextField txtBairro;
    private javax.swing.JFormattedTextField txtCep;
    private javax.swing.JTextField txtComplemento;
    private javax.swing.JFormattedTextField txtCpf;
    private javax.swing.JFormattedTextField txtDataNascimento;
    private javax.swing.JTextField txtEstadoCivil;
    private javax.swing.JTextField txtLogradouro;
    private javax.swing.JTextField txtNomePessoa;
    private javax.swing.JTextField txtNumero;
    private javax.swing.JTextField txtNumeroCelular;
    private javax.swing.JTextField txtPassaporte;
    private javax.swing.JTextField txtSexo;
    // End of variables declaration//GEN-END:variables
}
